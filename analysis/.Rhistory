ggplot() +
geom_jitter(aes(x=synthetic, y=empirical, col=condition), alpha=0.5, width=0.01, height=0.01, size=2) +
geom_jitter(aes(x=baseline, y=empirical, col=condition), alpha=0.5, width=0.01, height=0.01, size=2)
dfEmpSynthBaseline %>%
filter(condition != 'neither') %>%
spread(data_type, prop)
dfEmpSynthBaseline %>%
filter(condition != 'neither') %>%
spread(display_type, prop)
dfEmpSynthBaseline %>%
filter(condition != 'neither') %>%
spread(display_type, prop) %>%
ggplot() +
geom_jitter(aes(x=frequent, y=infrequent, col=condition), alpha=0.5, width=0.01, height=0.01, size=2)
dfEmpSynthBaseline %>%
filter(condition != 'neither') %>%
spread(display_type, prop) %>%
ggplot() +
geom_jitter(aes(x=frequent, y=infrequent, col=condition), alpha=0.5, width=0.01, height=0.01, size=2) +
ggtitle("Model vs Empirical predictions Kanwal (2017)") +
theme_few() +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(~data_type)
dfEmpSynthBaseline %>%
filter(condition != 'neither') %>%
spread(data_type, prop)
dfEmpSynthBaseline %>%
filter(condition != 'neither') %>%
spread(data_type, prop) %>%
ggplot() +
geom_point(aes(x=baseline, y=empirical, col=condition), alpha=0.5, width=0.01, height=0.01, size=2)
dfEmpSynthBaseline %>%
filter(condition != 'neither') %>%
spread(data_type, prop) %>%
ggplot() +
geom_jitter(aes(x=baseline, y=empirical, col=condition), alpha=0.5, width=0.01, height=0.01, size=2) +
dfEmpSynthBaseline %>%
filter(condition != 'neither') %>%
spread(display_type, prop) %>%
ggplot() +
geom_jitter(aes(x=frequent, y=infrequent, col=condition), alpha=0.5, width=0.01, height=0.01, size=2)
dfEmpSynthBaseline %>%
filter(condition != 'neither') %>%
spread(display_type, prop) %>%
ggplot() +
geom_jitter(aes(x=frequent, y=infrequent, col=condition), alpha=0.5, width=0.01, height=0.01, size=2) +
ggtitle("Model vs Empirical predictions Kanwal (2017)") +
theme_few() +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(~data_type)
dfEmpSynthBaseline %>%
filter(condition != 'neither') %>%
spread(display_type, prop) %>%
ggplot() +
geom_point(aes(x=frequent, y=infrequent, col=condition), alpha=0.5, width=0.01, height=0.01, size=2) +
ggtitle("Model vs Empirical predictions Kanwal (2017)") +
theme_few() +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(~data_type)
dfEmpSynthBaseline %>%
filter(condition != 'neither') %>%
spread(data_type, prop) %>%
ggplot() +
geom_jitter(aes(x=baseline, y=empirical, col=condition), alpha=0.5, width=0.01, height=0.01, size=2) +
geom_smooth(method='lm') +
ggtitle("Model vs Empirical predictions Kanwal (2017)") +
theme_few() +
theme(plot.title = element_text(hjust = 0.5))
dfEmpSynthBaseline %>%
filter(condition != 'neither') %>%
spread(data_type, prop) %>%
ggplot() +
geom_jitter(aes(x=baseline, y=empirical, col=condition), alpha=0.5, width=0.01, height=0.01, size=2)
dfEmpSynthBaseline %>%
filter(condition != 'neither') %>%
spread(data_type, prop) %>%
ggplot() +
geom_jitter(aes(x=baseline, y=empirical, col=condition), alpha=0.5, width=0.01, height=0.01, size=2) +
geom_jitter(aes(x=synthetic, y=empirical, col=condition), alpha=0.5, width=0.01, height=0.01, size=2)
dfEmpSynthBaseline %>%
filter(condition != 'neither') %>%
spread(data_type, prop) %>%
ggplot() +
geom_jitter(aes(x=baseline, y=empirical, col=condition), alpha=0.5, width=0.01, height=0.01, size=2) +
geom_jitter(aes(x=synthetic, y=empirical, col=condition), alpha=0.5, width=0.01, height=0.01, size=2) +
ggtitle("Model vs Empirical predictions Kanwal (2017)") +
theme_few() +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(~display_type)
dfEmpSynthBaseline %>%
filter(condition != 'neither') %>%
spread(data_type, prop) %>%
mutate(typ=ifelse(data_type %in% c('synthetic', 'baseline'), 'model', 'empirical'))
dfEmpSynthBaseline %>%
filter(condition != 'neither') %>%
spread(data_type, prop)
dfEmpSynthBaseline %>%
filter(condition != 'neither') %>%
spread(data_type, prop) %>%
gather(model, prop, c(baseline, synthetic))
dfEmpSynthBaseline %>%
filter(condition != 'neither') %>%
spread(data_type, prop) %>%
gather(model, prop, c(baseline, synthetic))
dfEmpSynthBaseline %>%
filter(condition != 'neither') %>%
spread(data_type, prop) %>%
gather(model, prop, c(baseline, synthetic))
ggplot(ae(x=empirical, y=prop)) +
geom_jitter(alpha=0.5, width=0.01, height=0.01, size=2) +
ggtitle("Model vs Empirical predictions Kanwal (2017)") +
theme_few() +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(~model)
dfEmpSynthBaseline %>%
filter(condition != 'neither') %>%
spread(data_type, prop) %>%
gather(model, prop, c(baseline, synthetic))
ggplot(aes(x=empirical, y=prop)) +
geom_jitter(alpha=0.5, width=0.01, height=0.01, size=2) +
ggtitle("Model vs Empirical predictions Kanwal (2017)") +
theme_few() +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(~model)
dfEmpSynthBaseline %>%
filter(condition != 'neither') %>%
spread(data_type, prop) %>%
gather(model, prop, c(baseline, synthetic)) %>%
ggplot(aes(x=empirical, y=prop)) +
geom_jitter(alpha=0.5, width=0.01, height=0.01, size=2) +
ggtitle("Model vs Empirical predictions Kanwal (2017)") +
theme_few() +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(~model)
dfEmpSynthBaseline %>%
filter(condition != 'neither') %>%
spread(data_type, prop) %>%
gather(model, prop, c(baseline, synthetic)) %>%
ggplot(aes(x=empirical, y=prop, col=model)) +
geom_jitter(alpha=0.5, width=0.01, height=0.01, size=2) +
ggtitle("Model vs Empirical predictions Kanwal (2017)") +
theme_few() +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(~model)
dfEmpSynthBaseline %>%
filter(condition != 'neither') %>%
spread(data_type, prop) %>%
gather(model, prop, c(baseline, synthetic)) %>%
ggplot(aes(x=empirical, y=prop, col=display_type)) +
geom_jitter(alpha=0.5, width=0.01, height=0.01, size=2) +
ggtitle("Model vs Empirical predictions Kanwal (2017)") +
theme_few() +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(~model)
dfEmpSynthBaseline %>%
filter(condition != 'neither') %>%
spread(data_type, prop) %>%
gather(model, prop, c(baseline, synthetic)) %>%
ggplot(aes(x=empirical, y=prop, col=display_type)) +
# geom_jitter(alpha=0.5, width=0.01, height=0.01, size=2) +
geom_point(alpha=0.5, width=0.01, height=0.01, size=2) +
ggtitle("Model vs Empirical predictions Kanwal (2017)") +
theme_few() +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(~model)
dfEmpSynthBaseline %>%
filter(condition != 'neither') %>%
spread(data_type, prop) %>%
gather(model, prop, c(baseline, synthetic)) %>%
ggplot(aes(x=empirical, y=prop, col=display_type)) +
# geom_jitter(alpha=0.5, width=0.01, height=0.01, size=2) +
geom_point(alpha=0.5, size=2) +
ggtitle("Model vs Empirical predictions Kanwal (2017)") +
theme_few() +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(~model)
dfEmpSynthBaseline %>%
filter(condition != 'neither') %>%
spread(data_type, prop) %>%
gather(model, prop, c(baseline, synthetic)) %>%
ggplot(aes(x=prop, y=empirical, col=display_type)) +
# geom_jitter(alpha=0.5, width=0.01, height=0.01, size=2) +
geom_point(alpha=0.5, size=2) +
ggtitle("Model vs Empirical predictions Kanwal (2017)") +
theme_few() +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(~model)
dfEmpSynthBaseline %>%
filter(condition != 'neither') %>%
spread(data_type, prop) %>%
gather(model, prop, c(baseline, synthetic)) %>%
ggplot(aes(x=prop, y=empirical, col=display_type)) +
geom_point(alpha=0.5, size=2) +
geom_smooth(method='lm') =
ggtitle("Model vs Empirical predictions Kanwal (2017)") +
theme_few() +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(~model)
dfEmpSynthBaseline %>%
filter(condition != 'neither') %>%
spread(data_type, prop) %>%
gather(model, prop, c(baseline, synthetic)) %>%
ggplot(aes(x=prop, y=empirical, col=display_type)) +
geom_point(alpha=0.5, size=2) +
geom_smooth(method='lm') +
ggtitle("Model vs Empirical predictions Kanwal (2017)") +
theme_few() +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(~model)
dfEmpSynthBaseline %>%
filter(condition != 'neither') %>%
spread(data_type, prop) %>%
gather(model, prop, c(baseline, synthetic)) %>%
ggplot(aes(x=prop, y=empirical, col=display_type)) +
geom_point(alpha=0.5, size=2) +
geom_smooth(method='lm', group=0) +
ggtitle("Model vs Empirical predictions Kanwal (2017)") +
theme_few() +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(~model)
dfEmpSynthBaseline %>%
filter(condition != 'neither') %>%
spread(data_type, prop) %>%
gather(model, prop, c(baseline, synthetic)) %>%
ggplot(aes(x=prop, y=empirical, col=display_type)) +
geom_point(alpha=0.5, size=2) +
geom_smooth(method='lm', group=1) +
ggtitle("Model vs Empirical predictions Kanwal (2017)") +
theme_few() +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(~model)
dfEmpSynthBaseline %>%
filter(condition != 'neither') %>%
spread(data_type, prop) %>%
gather(model, prop, c(baseline, synthetic)) %>%
ggplot(aes(x=prop, y=empirical, col=display_type)) +
geom_point(alpha=0.5, size=2) +
geom_smooth(method='lm') +
ggtitle("Model vs Empirical predictions Kanwal (2017)") +
theme_few() +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(~model)
dfEmpSynthBaseline %>%
filter(condition != 'neither') %>%
spread(data_type, prop) %>%
gather(model, prop, c(baseline, synthetic)) %>%
ggplot(aes(x=prop, y=empirical)) +
geom_point(alpha=0.5, size=2) +
geom_smooth(method='lm') +
ggtitle("Model vs Empirical predictions Kanwal (2017)") +
theme_few() +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(~model)
dfEmpSynthBaseline %>%
filter(condition != 'neither') %>%
spread(display_type, prop) %>%
ggplot() +
geom_jitter(aes(x=frequent, y=infrequent, col=condition), alpha=0.5, width=0.01, height=0.01, size=2) +
ggtitle("Model vs Empirical predictions Kanwal (2017)") +
theme_few() +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(~data_type)
dfEmpSynthBaseline %>%
filter(condition != 'neither')
cor(
dfEmpSynthBaseline %>%
filter(condition != 'neither',
data_type=='empirical')$prop,
dfEmpSynthBaseline %>%
filter(condition != 'neither',
data_type=='baseline')$prop
)
dfEmpSynthBaseline %>%
filter(condition != 'neither',
data_type=='empirical')$prop
dfEmpSynthBaseline %>%
filter(condition != 'neither',
data_type=='empirical')
dfEmpSynthBaseline %>%
filter(condition != 'neither',
data_type=='empirical')$prop
dfEmpSynthBaseline %>%
filter(condition != 'neither',
data_type=='empirical') %>%
select(prop)
dfEmpSynthBaseline %>%
filter(condition != 'neither',
data_type=='empirical') %>%
ungroup %>%
select(prop)
cor(
dfEmpSynthBaseline %>%
filter(condition != 'neither',
data_type=='empirical') %>%
ungroup %>%
select(prop),
dfEmpSynthBaseline %>%
filter(condition != 'neither',
data_type=='baseline') %>%
ungroup %>%
select(prop)
)
cor(
dfEmpSynthBaseline %>%
filter(condition != 'neither',
data_type=='empirical') %>%
ungroup %>%
select(prop),
dfEmpSynthBaseline %>%
filter(condition != 'neither',
data_type=='baseline') %>%
ungroup %>%
select(prop)
)^2
dfEmpSynthBaseline %>%
filter(condition != 'neither'
dfEmpSynthBaseline %>%
dfEmpSynthBaseline %>%
filter(condition != 'neither')
dfEmpSynthBaseline %>%
filter(condition != 'neither')
dfEmpSynthBaseline %>%
filter(condition != 'neither') %>%
spread(data_type, prop)
dfBaselineCor$baseline
dfBaselineCor <- dfEmpSynthBaseline %>%
filter(condition != 'neither') %>%
spread(data_type, prop)
dfBaselineCor
dfBaselineCor$baseline
cor(dfBaselineCor$baseline,
dfBaselineCor$empirical)^2
library(dplyr)
library(ggplot2)
library(ggthemes)
library(rwebppl)
library(tidyr)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(rwebppl)
library(tidyr)
# getModelFile()
# ==============
# Return a model string from a .wppl file
#
# Parameters
# ----------
# modelFile: str
#  File path str
#
# Returns
# -------
# str
#    Model str.
#
getModelFile <- function(modelFile) {
readChar(modelFile, file.info(modelFile)$size)
}
# Hueristic modelable data
f_modelable_data <- "../modelable-data-20180330.csv"
dfModelable <- read.csv(f_modelable_data)
# All data
f_all_data <- "../kanwal-preprocessed.csv"
dfAll <- read.csv(f_all_data) %>%
mutate(frequent=round(frequent, 2),
infrequent=round(infrequent, 2))
f_bda_model <- "../kanwal-BDA-20180330.wppl"
model_bda <- getModelFile(f_bda_model)
bda_data <- head(dfModelable)
nrow(dfModelable)
problemIPs <- c('70.198.5.150',
'117.217.210.9',
'65.183.140.246',
'24.253.233.194',
'24.20.229.200',
'108.196.136.202',
'122.161.26.31')
# 24.74.13.244 only after 10000 attempts
# 50.153.162.232
#
# but worked on second time
dfAll2 <- dfAll %>% filter(!(IP %in% problemIPs))
# If we haven't re-run the BDA predictives then load cached version.
if (!exists('df_bda')) {
df_bda <- read.csv("bda-tuned-params-20180303.csv")
}
fPath <- "../kanwal-generative-model-20180328.wppl"
m <- getModelFile(fPath)
dfSynthetic <- rwebppl::webppl(m, data=df_bda, data_var='rData')
fEmpiricalPath <- "../kanwal-preprocessed.csv"
dfEmpirical <- read.csv(fEmpiricalPath)
# Minor preprocessing
dfSynthetic <- dfSynthetic %>%
rename(display_type=trialType) %>%
mutate(label_type=ifelse(utterance=='zop', 'short', 'long'))
dfSyntheticCnts <-  dfSynthetic %>%
group_by(IP, condition, display_type, label_type) %>%
summarise(cnt=n())
display_types <- c('frequent', 'infrequent')
label_types <- c('short', 'long')
# New data frame for merging missing counts
dfPlaceholder <- data.frame(expand.grid(IP=unique(dfSynthetic$IP),
condition=unique(dfSynthetic$condition),
display_type=display_types,
label_type=label_types)) %>%
mutate(
IP=as.character(IP),
condition=as.character(condition),
display_type=as.character(display_type),
label_type=as.character(label_type),
cnt=as.integer(0))
# First combine and take counts
dfJoin1 <- full_join(dfSyntheticCnts, dfPlaceholder, by=c('IP', 'condition', 'display_type', 'label_type', 'cnt')) %>%
arrange(IP, condition, display_type) %>%
group_by(IP, condition, display_type, label_type) %>%
summarise(cnt=sum(cnt))
# We want to filter based on whether the group (IP, condition) ash *any* counts, so get these IDs
dfJoin2 <- full_join(dfSyntheticCnts, dfPlaceholder, by=c('IP', 'condition', 'display_type', 'label_type', 'cnt')) %>%
arrange(IP, condition, display_type) %>%
group_by(IP, condition, display_type, label_type) %>%
summarise(cnt=sum(cnt)) %>%
group_by(IP, condition) %>%
summarise(groupTotal=sum(cnt))
dfSyntheticFinal <- full_join(dfJoin1, dfJoin2, by=c('IP', 'condition')) %>%
filter(groupTotal == 32) %>%
mutate(condition_total=ifelse(display_type=='frequent', 24, 8)) %>%
group_by(IP, condition, display_type) %>%
mutate(prop=cnt/condition_total) %>%
select(IP, condition, display_type, label_type, prop) %>%
filter(label_type=='short')
# spread(display_type, prop)
dfSyntheticFinal <- dfSyntheticFinal %>%
select(IP, condition, display_type, prop)
dfEmpiricalProcessed <- dfEmpirical %>%
mutate(IP=as.character(IP),
condition=as.character(condition)) %>%
gather(display_type, prop, c(frequent, infrequent)) %>%
select(IP, condition, display_type, prop)
dfEmpSynth <- left_join(dfSyntheticFinal, dfEmpiricalProcessed, by=c("IP", "condition", "display_type")) %>%
gather(data_type, prop, c(prop.y, prop.x)) %>%
select(IP, condition, display_type, data_type, prop) %>%
mutate(data_type=ifelse(data_type=='prop.x', 'synthetic', 'empirical'))
dfEmpSynth %>%
spread(display_type, prop) %>%
ggplot(aes(x=frequent, y=infrequent, col=condition, group=IP)) +
geom_point(aes(shape=data_type), alpha=0.5, size=2.5) +
geom_line(alpha=0.7, col='grey', lty=2) +
theme_few() +
facet_grid(~condition)
dfEmpSynthCor <- dfEmpSynth  %>%
spread(data_type, prop)
paste("R^2:", round(cor(dfEmpSynthCor$empirical, dfEmpSynthCor$synthetic)^2, 3))
dfEmpSynth %>%
spread(data_type, prop) %>%
ggplot(aes(x=synthetic, y=empirical)) +
geom_jitter(aes(col=condition), alpha=0.5, width=0.01, height=0.01, size=2) +
geom_smooth(method='lm') +
ggtitle("Model vs Empirical predictions Kanwal (2017)") +
theme_few() +
theme(plot.title = element_text(hjust = 0.5))
dfEmpSynthCor <- dfEmpSynth  %>%
filter(condition != 'neither') %>%
spread(data_type, prop)
paste("R^2:", round(cor(dfEmpSynthCor$empirical, dfEmpSynthCor$synthetic)^2, 3))
dfEmpSynth %>%
spread(data_type, prop) %>%
ggplot(aes(x=synthetic, y=empirical)) +
geom_point(aes(col=condition), alpha=0.5, width=0.01, height=0.01, size=2) +
geom_smooth(method='lm') +
ggtitle("Model vs Empirical predictions Kanwal (2017)") +
theme_few() +
theme(plot.title = element_text(hjust = 0.5))
dfEmpSynth %>%
filter(condition != 'neither') %>%
spread(data_type, prop) %>%
ggplot(aes(x=synthetic, y=empirical)) +
geom_point(aes(col=condition), alpha=0.5, size=2) +
geom_smooth(method='lm') +
ggtitle("Model vs Empirical predictions Kanwal (2017)") +
theme_few() +
theme(plot.title = element_text(hjust = 0.5))
# getModelFile()
# ==============
# Return a model string from a .wppl file
#
# Parameters
# ----------
# modelFile: str
#  File path str
#
# Returns
# -------
# str
#    Model str.
#
getModelFile <- function(modelFile) {
readChar(modelFile, file.info(modelFile)$size)
}
# Hueristic modelable data
f_modelable_data <- "../modelable-data-20180330.csv"
dfModelable <- read.csv(f_modelable_data)
# All data
f_all_data <- "../kanwal-preprocessed.csv"
dfAll <- read.csv(f_all_data) %>%
mutate(frequent=round(frequent, 2),
infrequent=round(infrequent, 2))
library(dplyr)
library(ggplot2)
library(ggthemes)
library(rwebppl)
library(tidyr)
